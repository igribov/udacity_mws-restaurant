"use strict";function registerServiceWorker(){if(!1 in navigator)throw new Error("serviceWorker not register");navigator.serviceWorker.register("/sw.js").then(function(e){var n;navigator.serviceWorker.controller&&(e.active&&console.log("There is an an active service worker"),e.waiting&&(console.log("waiting :",e.waiting),console.log("service worker is waiting"),updateServiceWorker(e.waiting)),e.installing&&(console.log("installing : ",e),console.log("service worker status is installing"),trackInstalling(e.installing)),e.addEventListener("updatefound",function(){console.log("service worker update found",e),trackInstalling(e.installing)}),navigator.serviceWorker.addEventListener("controllerchange",function(){n||setTimeout(function(){window.location.reload(),n=!0},1e3)}))}).catch(function(e){console.log("Registration failed with "+e)})}function trackInstalling(e){e?e.addEventListener("statechange",function(){console.log("ServiceWorker state was changed to "+e.state),"installed"===e.state&&(console.log("Service worker installed and waiting for activation",e),updateServiceWorker(e))}):console.log("Worker not defined!")}function updateServiceWorker(e){sendMessageToServiceWorker({action:"skipWaiting"},e).then(function(e){console.log(e)})}function sendMessageToServiceWorker(r,t){return new Promise(function(n,o){var e=new MessageChannel;e.port1.onmessage=function(e){e.data.error?o(e.data.error):n(e.data)},t.postMessage(r,[e.port2])})}